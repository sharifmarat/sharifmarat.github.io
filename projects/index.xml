<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Marat Sharifullin</title>
    <link>http://sharifmarat.github.io/projects/</link>
    <description>Recent content in Projects on Marat Sharifullin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://sharifmarat.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flickr Roulette</title>
      <link>http://sharifmarat.github.io/projects/flickr_roulette/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sharifmarat.github.io/projects/flickr_roulette/</guid>
      <description>function jsonFlickrApi(obj) { var p = obj.photos.photo[Math.floor(Math.random() * obj.photos.total)]; var raw_url = &#34;https://farm&#34; + p.farm + &#34;.static.flickr.com/&#34; + p.server + &#34;/&#34;+ p.id + &#34;_&#34; + p.secret + &#34;_b.jpg&#34;; var flickr_url = &#34;https://www.flickr.com/photos/&#34; + p.owner + &#34;/&#34; + p.id; document.getElementById(&#34;pic&#34;).src = raw_url; document.getElementById(&#34;source&#34;).innerText = &#34;Check the license &#34; + flickr_url + &#34; before using this photo&#34;; } function reload() { var head = document.getElementsByTagName(&#39;head&#39;)[0]; var script = document.</description>
    </item>
    
    <item>
      <title>Percolation</title>
      <link>http://sharifmarat.github.io/projects/percolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sharifmarat.github.io/projects/percolation/</guid>
      <description>Imagine the grid where every pixel is open with some probability p. What is the probability to get from left side of the grid to right via open pixels (site percolation)?

**Result**:  Probability to enable a pixel (0 to 100):  Pixel size: 1 2 4 8 10 20 40  Note: If you want to get an idea of critical percolation threshold (high probability that long-range connectivity occurs), it is possible to run multiple iterations for all probabilities (0 to 100) and calculate how many times long-range connectivity occured.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>http://sharifmarat.github.io/projects/all/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sharifmarat.github.io/projects/all/</guid>
      <description>LongWarn A tiny shell script to fail a job and trigger a notification if a cronjob takes longer than desired.
If a job takes longer than expected, for example a backup job usually takes a few seconds, For example a backup job usually runs under 1 minute. If you want to get notified when this job runs longer, just add it to crontab:
MAILTO=monitoring@example.com 11 11 * * * longwarn 60 backup.</description>
    </item>
    
  </channel>
</rss>
